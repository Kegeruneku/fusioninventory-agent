#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use English qw(-no_match_vars);
use Getopt::Long;
use Pod::Usage;

use FusionInventory::Agent;
use FusionInventory::Agent::Recipient;
use FusionInventory::Agent::Task::NetDiscovery;

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

my $options = {
    threads   => 1
};

GetOptions(
    $options,
    'community=s@',
    'credential=s@',
    'entity=s',
    'threads=i',
    'recipient=s',
    'timeout=i',
    'verbose',
    'debug+',
    'help',
    'version'
) or pod2usage(-verbose => 0);

if ($options->{version}) {
  print "NetDiscovery task $FusionInventory::Agent::Task::NetDiscovery::VERSION\n";
  exit 0;
}
pod2usage(-verbose => 0, -exitval => 0) if $options->{help};
pod2usage(
    -message => "no target given, aborting\n", -verbose => 0
) unless @ARGV;

my $agent = FusionInventory::Agent->new(%setup);
$agent->init(options => $options);

my $block_id = 1;
my @blocks;
foreach my $arg (@ARGV) {
    my $block;
    foreach my $parameter (split(',', $arg)) {
        my ($key, $value) = split(':', $parameter);
        if (!$value) {
            $block->{spec} = $key;
        } else {
            $block->{$key} = $value;
        }
    }
    $block->{id}     = $block_id++ unless $block->{id};
    $block->{entity} = $options->{entity} if $options->{entity};
    push @blocks, $block;
}

my $credentials_id = 1;
my @credentials;
if ($options->{community}) {
    foreach my $community (@{$options->{community}}) {
        push @credentials,
            { id => $credentials_id++, version => 1, community => $community };
    }
} elsif ($options->{credential}) {
    foreach my $specification (@{$options->{credential}}) {
        my $credential = { id => $credentials_id++ };
        foreach my $parameter (split(',', $specification)) {
            my ($key, $value) = split(':', $parameter);
            $credential->{$key} = $value;
        }
        push @credentials, $credential;
    }
} else {
    push @credentials, {
        id => $credentials_id++, version => 1, community => 'public'
    };
}

my $task = FusionInventory::Agent::Task::NetDiscovery->new(
    logger => $agent->{logger},
);

$task->configure(
    datadir     => $agent->{datadir},
    deviceid    => $agent->{deviceid},
    pid         => 1,
    threads     => $options->{threads},
    timeout     => $options->{timeout},
    blocks      => \@blocks,
    credentials => \@credentials,
);

my $recipient = FusionInventory::Agent::Recipient->create(
    target  => $options->{recipient},
    verbose => $options->{verbose}
);

eval {
    $task->run(recipient => $recipient);
};
if ($EVAL_ERROR) {
    print STDERR "Execution failure:.\n";
    print STDERR $EVAL_ERROR;
    exit 1;
}

__END__

=head1 NAME

fusioninventory-netdiscovery - Standalone network discovery

=head1 SYNOPSIS

B<fusioninventory-netdiscovery>
S<[B<--credential> I<string>]> S<[B<--timeout> I<integer>]>
S<[B<--threads> I<integer>]> S<[B<--entity> I<string>]>
S<[B<--recipient> I<string>]> S<[B<--verbose>]> S<[B<--debug>]>
I<block_spec> ...

=head1 OPTIONS

=over

=item B<--credential> I<string>

SNMP credentials (default: version:1,community:public)

=item B<--timeout> I<integer>

SNMP timeout (default: 15s)

=item B<--threads> I<integer>

threads number (default: 1)

=item B<--entity> I<string>

GLPI entity

=item B<--recipient> I<string>

where to send result (default: stdout)

=item B<--verbose>

verbose output (control messages)

=item B<--debug>

debug output (execution traces)

=back

=head1 EXAMPLES

    $> fusioninventory-netdiscovery 192.168.1.0/24
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --recipient /tmp
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --recipient http://glpi.domain.com/plugins/fusioninventory
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --credential version:1,community:public
        --credential version:3,username:foo,authprotocol:sha1,authpassword:bar
    $> fusioninventory-netdiscovery 192.168.1.0/24 192.168.2.0/24

=head1 DESCRIPTION

F<fusioninventory-netdiscovery> allows to run a network discovery task without a
GLPI server.
